# This contains params to be used by the stages to train or predict

initial_pipeline:
  cv: StratifiedKFold(n_splits=10)
  scoring: 'accuracy' 

hyperparameter_tuning_params:
  model__n_estimators: [int(x) for x in np.linspace(start = 1, stop = 20, num = 20)] # number of trees in the random forest
  model__max_features: ['auto', 'sqrt'] # number of features in consideration at every split
  model__max_depth: [int(x) for x in np.linspace(10, 120, num = 12)] # maximum number of levels allowed in each decision tree
  model__min_samples_split: [2, 6, 10] # minimum sample number to split a node
  model__min_samples_leaf: [1, 3, 4] # minimum sample number that can be stored in a leaf node
  model__bootstrap: [True, False] # method used to sample data points

hyperparameter_tuning: 
  scoring: 'accuracy'
  n_jobs: -1
  cv: KFold(n_splits=5)

final_pipeline: 
  scoring_accuracy: 'accuracy'
  scoring_f1: 'f1'
  cv: StratifiedKFold(n_splits=10)
  n_jobs: -1